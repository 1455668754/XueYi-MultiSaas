import { ${ClassName}IM,#if($table.tree || $api.export) ${ClassName}PM,#end#if(!$table.tree) ${ClassName}PPM,#end#if($table.tree) ${ClassName}LM#else ${ClassName}LRM#end } from '@/model/${fePackageName}#if(!$isDependMode)/${businessName}.model#end';
import { defHttp } from '@/utils/http/axios';
#if($api.export)
import { formatToDateTime } from '@/utils/core/DateUtil';
import dayjs from 'dayjs';
#end

const basicApi = '/${moduleName}/admin/${businessName}';

enum Api {
#if($api.list)
  LIST = basicApi + '/list',
#end
#if($api.getInfo)
  GET = basicApi + '/',
#end
#if($api.add)
  ADD = basicApi,
#end
#if($api.edit)
  EDIT = basicApi,
#end
#if($api.editStatus)
  EDIT_STATUS = basicApi + '/status',
#end
#if($api.batchRemove)
  DEL_BATCH = basicApi + '/batch/',
#end
#if($api.export)
  EXPORT = basicApi + '/export',
#end
#if($api.cache)
  REFRESH = basicApi + '/refresh',
#end
}
#set($IdName = $pkColumn.javaField)
#if($pkColumn.javaType == 'Long' || $pkColumn.javaType == 'String')
#set($IdType = 'string')
#elseif($pkColumn.javaType == 'Integer' || $pkColumn.javaType == 'Double' || $pkColumn.javaType == 'BigDecimal')
#set($IdType = 'number')
#else
#set($IdType = 'any')
#end
#if($api.list)

/** 查询${functionName}列表 */
export const list${BusinessName}Api = (params?: #if($table.tree)${ClassName}PM#else${ClassName}PPM#end) =>
  defHttp.get<#if($table.tree)${ClassName}LM#else${ClassName}LRM#end>({ url: Api.LIST, params });
#end
#if($api.getInfo)

/** 查询${functionName}详细 */
export const get${BusinessName}Api = (${IdName}: ${IdType}) =>
  defHttp.get<${ClassName}IM>({ url: Api.GET, params: ${IdName} });
#end
#if($api.add)

/** 新增${functionName} */
export const add${BusinessName}Api = (params: ${ClassName}IM) =>
  defHttp.post({ url: Api.ADD, params });
#end
#if($api.edit)

/** 修改${functionName} */
export const edit${BusinessName}Api = (params: ${ClassName}IM) =>
  defHttp.put({ url: Api.EDIT, params });
#end
#if($api.editStatus)
#set($StatusName = $statusColumn.javaField)
#if($statusColumn.javaType == 'Long' || $statusColumn.javaType == 'String')
#set($StatusType = 'string')
#elseif($statusColumn.javaType == 'Integer' || $statusColumn.javaType == 'Double' || $statusColumn.javaType == 'BigDecimal')
#set($StatusType = 'number')
#else
#set($StatusType = 'any')
#end

/** 修改${functionName}状态 */
export const editStatus${BusinessName}Api = (${IdName}: ${IdType}, ${StatusName}: ${StatusType}) =>
  defHttp.put({
    url: Api.EDIT_STATUS,
    params: { ${IdName}: ${IdName}, ${StatusName}: ${StatusName} },
  });
#end
#if($api.batchRemove)

/** 删除${functionName} */
export const del${BusinessName}Api = (${IdName}s: ${IdType} | ${IdType}[]) =>
  defHttp.delete({ url: Api.DEL_BATCH, params: ${IdName}s.toString() });
#end
#if($api.export)

/** 导出${functionName} */
export const export${BusinessName}Api = async (params?: ${ClassName}PM) =>
  defHttp.export<any>(
    { url: Api.EXPORT, params: params },
    '${functionName}_' + formatToDateTime(dayjs()) + '.xlsx',
  );
#end
#if($api.cache)

/** 刷新${functionName}缓存 */
export const refresh${BusinessName}Api = () => defHttp.get({url: Api.REFRESH});
#end