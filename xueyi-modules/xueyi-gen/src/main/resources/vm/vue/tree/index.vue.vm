<template>
  <div>
    <BasicTable @register="registerTable">
      <template #toolbar>
        <a-button type="primary" @click="handleCreate"> 新增 </a-button>
        <a-button type="primary" @click="expandAll">展开全部</a-button>
        <a-button type="primary" @click="collapseAll">折叠全部</a-button>
      </template>
      <template #action="{ record }">
        <TableAction
                :actions="[
            {
              icon: 'clarity:note-edit-line',
              tooltip: '编辑',
              onClick: handleEdit.bind(null, record),
            },
            {
              icon: 'ant-design:delete-outlined',
              color: 'error',
              tooltip: '删除',
              popConfirm: {
                title: '是否确认删除',
                confirm: handleDelete.bind(null, record),
              },
            },
          ]"
        />
      </template>
    </BasicTable>
    <${BusinessName}Modal @register="registerModal" @success="handleSuccess" />
  </div>
</template>

<script lang="ts">
import { defineComponent } from 'vue';
import { BasicTable, useTable, TableAction } from '/@/components/Table';
import { useModal } from '/@/components/Modal';
import ${BusinessName}Modal from './${BusinessName}Modal.vue';
import { columns, searchFormSchema } from './${businessName}.data';
import { list${BusinessName}Api}, del${BusinessName}Api } from '/@/api/${frontModuleName}/${businessName}';
import { useMessage } from '/@/hooks/web/useMessage';

export default defineComponent({
  name: '${BusinessName}Management',
  components: { BasicTable, ${BusinessName}Modal, TableAction },
  setup() {
    const { createMessage } = useMessage();
    const [registerModal, { openModal }] = useModal();
    const [registerTable, { reload, expandAll, collapseAll }] = useTable({
      title: '${functionName}列表',
      api: list${BusinessName}Api,
      columns,
      formConfig: {
        labelWidth: 120,
        schemas: searchFormSchema,
      },
      rowKey: '${pkColumn.javaField}',
      isTreeTable: true,
      pagination: false,
      striped: false,
      useSearchForm: true,
      showTableSetting: true,
      tableSetting: {
        fullScreen: true,
      },
      bordered: true,
      showIndexColumn: false,
      canResize: false,
      actionColumn: {
        width: 80,
        title: '操作',
        dataIndex: 'action',
        slots: { customRender: 'action' },
        fixed: undefined,
      },
    });

    /** 新增按钮 */
    function handleCreate() {
      openModal(true, {
        isUpdate: false,
      });
    }

    /** 修改按钮 */
    function handleEdit(record: Recordable) {
      openModal(true, {
        record,
        isUpdate: true,
      });
    }

    function handleDelete(record: Recordable) {
    del${BusinessName}Api(record.${pkColumn.javaField}).then(() => {
    createMessage.success('删除#if($nameColumn)' + record.${nameColumn.javaField} + '#end成功！');
      reload();
    });
  }

  function handleSuccess() {
    reload();
  }

  return {
    registerTable,
    registerModal,
    handleCreate,
    handleEdit,
    handleDelete,
    handleSuccess,
    expandAll,
    collapseAll,
  };
},
});
</script>