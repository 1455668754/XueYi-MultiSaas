<template>
  <PageWrapper :title="getTitle" @back="goBack">
    <Description @register="register" class="mt-4" />
  </PageWrapper>
</template>

<script lang="ts">
  import { get${BusinessName}Api } from '/@/api/${frontModuleName}/${businessName}';
  import { Description, useDescription } from '/@/components/Description';
  import { detailSchema, ${BusinessName}IndexGo } from './${businessName}.data';
  import { PageWrapper } from '/@/components/Page';
  import { useTabs } from '/@/hooks/web/useTabs';
  import { useGo } from '/@/hooks/web/usePage';
  import { defineComponent, ref } from 'vue';
  import { useRoute } from 'vue-router';

  export default defineComponent({
    components: { Description, PageWrapper },
    setup() {
      const route = useRoute();
      const go = useGo();
      const { setTitle } = useTabs();
      const getTitle = ref('${functionName}详情');

      const [register, { setDescProps }] = useDescription({
        title: '${BusinessName}Detail',
        schema: detailSchema,
      });
#if($pkColumn.javaType == 'Long')
#set($IdType = 'string | number')
#elseif($pkColumn.javaType == 'Integer' || $pkColumn.javaType == 'Double' || $pkColumn.javaType == 'BigDecimal')
#set($IdType = 'number')
#elseif($pkColumn.javaType == 'String')
#set($IdType = 'string')
#else
#set($IdType = 'any')
#end

      async function create() {
        const ${pkColumn.javaField} = route.params.${pkColumn.javaField} as ${IdType};
        const data = await get${BusinessName}Api(${pkColumn.javaField});
        setDescProps({ data: data });
        getTitle.value = '${functionName}详情:' + data?.#if($nameColumn)${nameColumn.javaField}#else${pkColumn.javaField}#end;
        setTitle('${functionName}详情:' + getTitle.value);
      }
      create();

      /** 返回${functionName}主页 */
      function goBack() {
        go(${BusinessName}IndexGo);
      }

      return { register, getTitle, goBack };
    },
  });
</script>